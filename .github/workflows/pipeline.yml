name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_REGION: northamerica-northeast2
  REGISTRY: ${{ secrets.GCP_REGION }}-docker.pkg.dev

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Test Backend
        working-directory: ./backend
        run: |
          npm ci
          npm run test:coverage
      
      - name: Test Frontend
        working-directory: ./frontend
        run: |
          npm ci
          npm test -- --coverage --watchAll=false

  build-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push'
    
    steps:
      - uses: actions/checkout@v3
      
      - uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
      
      - uses: google-github-actions/setup-gcloud@v1
      
      - name: Configure Docker
        run: gcloud auth configure-docker ${{ env.GCP_REGION }}-docker.pkg.dev
      
      - name: Build and Deploy
        run: |
          # Build and push images
          docker build -t ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/progress-tracker/backend:${{ github.sha }} ./backend
          docker build -t ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/progress-tracker/frontend:${{ github.sha }} ./frontend
          
          docker push ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/progress-tracker/backend:${{ github.sha }}
          docker push ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/progress-tracker/frontend:${{ github.sha }}
          
          # Deploy to Cloud Run
          gcloud run deploy progress-tracker-backend \
            --image ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/progress-tracker/backend:${{ github.sha }} \
            --platform managed \
            --region ${{ env.GCP_REGION }}
